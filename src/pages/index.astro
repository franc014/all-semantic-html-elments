---
import ElementCard from "../components/ElementCard.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const allElements = await getCollection("elements");
---

<Layout title="All Semantic Elements">
  <main>
    <h1
      class="border-b border-indigo-200 border-solid py-4 mb-14 text-gray-800"
    >
      All semantic elements
    </h1>

    <ul role="list" class="flex flex-col gap-20 md:grid md:grid-cols-2">
      {
        allElements.map(async (el) => {
          const { Content } = await el.render();
          return (
            <ElementCard
              description={el.data.description}
              element={el.data.element}
              doclink={el.data.doclink}
            >
              <Content />
            </ElementCard>
          );
        })
      }
    </ul>
  </main>

  <style>
    .text-gradient {
      background-image: var(--accent-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400%;
      background-position: 0%;
    }
    .instructions {
      line-height: 1.6;
      margin: 1rem 0;
      border: 1px solid rgba(var(--accent), 25%);
      background-color: white;
      padding: 1rem;
      border-radius: 0.4rem;
    }
    .instructions code {
      font-size: 0.875em;
      font-weight: bold;
      background: rgba(var(--accent), 12%);
      color: rgb(var(--accent));
      border-radius: 4px;
      padding: 0.3em 0.45em;
    }
    .instructions strong {
      color: rgb(var(--accent));
    }
    .link-card-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
      gap: 1rem;
      padding: 0;
    }
  </style>
</Layout>
